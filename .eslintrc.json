{
    "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
    "parserOptions": {
        "ecmaVersion": 2020, // Allows for the parsing of modern ECMAScript features
        "sourceType": "module", // Allows for the use of imports
        "ecmaFeatures": {
            "jsx": true // Allows for the parsing of JSX
        }
    },
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "settings": {
        "react": {
            "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
        },
        "import/resolver": {
            "node": {
                "paths": ["src"],
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            }
        }
    },
    "plugins": ["import"],
    "extends": [
        // Uses the recommended rules from @eslint-plugin-react
        "plugin:react/recommended",
        // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
        "prettier/@typescript-eslint",
        // Uses the recommended rules from @typescript-eslint/eslint-plugin
        "plugin:@typescript-eslint/recommended",
        // For detecting bad React hooks practices
        "plugin:react-hooks/recommended",
        // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
        "plugin:prettier/recommended"
    ],
    "rules": {
        // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
        // e.g. "@typescript-eslint/explicit-function-return-type": "off",
        // Indent with 4 spaces
        "indent": ["error", 4],
        // Indent JSX with 4 spaces
        "react/jsx-indent": ["error", 4],
        // Indent props with 4 spaces
        "react/jsx-indent-props": ["error", 4],
        // File types that allow jsx
        "react/jsx-filename-extension": [
            "warn",
            {
                "extensions": [".js", ".jsx", ".tsx"]
            }
        ],
        // https://stackoverflow.com/questions/59265981/typescript-eslint-missing-file-extension-ts-import-extensions

        // Should use @typescript/no-unused-vars instead
        // https://github.com/typescript-eslint/typescript-eslint/issues/363
        "no-unused-vars": "off",
        // https://github.com/typescript-eslint/typescript-eslint/issues/123
        "semi": "off",
        "react/jsx-props-no-spreading": [
            "error",
            {
                "exceptions": ["img"]
            }
        ],
        "react/jsx-one-expression-per-line": "off",
        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],
        "no-console": "error"
    },
    "overrides": [
        {
            "files": ["*.tsx"],
            "rules": {
                "react/destructuring-assignment": "off",
                "@typescript-eslint/explicit-function-return-type": "off"
            }
        }
    ]
}
